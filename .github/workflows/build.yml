name: build
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.14.x]
        platform: [ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        id: install-go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Checkout Code
        id: checkout-code
        uses: actions/checkout@v1

      - name: Install Dependencies
        id: install-deps
        run: |
          go get -u -a -v -x github.com/ipsn/go-libtor
          go mod download

      - name: Build Linux
        id: build-linux
        run: cd cmd/pigeon && CGO_ENABLED=1 GO111MODULE=on go build -a -installsuffix cgo -ldflags '-s' -o pigeon-linux-amd64 .

      - name: Build MacOS
        id: build-macos
        run: cd cmd/pigeon && GOOS=darwin GOARCH=amd64 CGO_ENABLED=1 GO111MODULE=on go build -a -installsuffix cgo -ldflags '-s' -o pigeon-darwin-amd64 .

      - name: Test
        id: test
        run: go test -v -race -bench -cpu=1,2,4 -covermode atomic -coverprofile=profile.cov ./...

      - name: Submit Code Coverage
        id: submit-code-cov
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          GO111MODULE=off go get -u github.com/mattn/goveralls
          $(go env GOPATH)/bin/goveralls -service=github -coverprofile=profile.cov

      - name: Upload Linux Artifact
        id: upload-linux-artifact
        if: success() || failure()
        uses: actions/upload-artifact@v1.0.0
        with:
          name: pigeon-linux-amd64
          path: cmd/pigeon

      - name: Upload MacOS Artifact
        id: upload-darwin-artifact
        if: success() || failure()
        uses: actions/upload-artifact@v1.0.0
        with:
          name: pigeon-macos-amd64
          path: cmd/pigeon